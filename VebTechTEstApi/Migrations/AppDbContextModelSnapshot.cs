// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VebTechTEstApi.Data;

#nullable disable

namespace VebTechTEstApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser", (string)null);

                    b.HasData(
                        new
                        {
                            RolesId = new Guid("3cdeabd8-fc68-4c53-8b02-27321f1e67c3"),
                            UsersId = new Guid("44b2d7af-bf9f-4a51-9eae-3dfe153ef315")
                        });
                });

            modelBuilder.Entity("VebTechTEstApi.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4668177-fca6-4894-b8e6-ff926c7c0e49"),
                            DateCreated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(5996),
                            DateUpdated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6003),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3cdeabd8-fc68-4c53-8b02-27321f1e67c3"),
                            DateCreated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6068),
                            DateUpdated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6069),
                            IsDeleted = false,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("2de178b4-17e0-40f5-b438-86c0affbc061"),
                            DateCreated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6073),
                            DateUpdated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6074),
                            IsDeleted = false,
                            Name = "Support"
                        },
                        new
                        {
                            Id = new Guid("3fe309fb-5d09-4f0a-ad05-2efe76280fe2"),
                            DateCreated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6077),
                            DateUpdated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6077),
                            IsDeleted = false,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("VebTechTEstApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44b2d7af-bf9f-4a51-9eae-3dfe153ef315"),
                            Age = 31,
                            DateCreated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6084),
                            DateUpdated = new DateTime(2023, 10, 10, 12, 14, 41, 515, DateTimeKind.Utc).AddTicks(6084),
                            Email = "superadmin@gmail.com",
                            IsDeleted = false,
                            Name = "SuperAdmin",
                            Password = "25D55AD283AA400AF464C76D713C07AD"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("VebTechTEstApi.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VebTechTEstApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
